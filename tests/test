#!/usr/bin/env bash

bin="./pipex"
infile="${PWD}/README.md"
expected_outfile="${PWD}/tests/expected_outfile"
outfile="${PWD}/tests/outfile"

NC="\033[0m"
CYAN="\033[36m"
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"

print_title() {
	printf "${CYAN}=====================$1======================${NC}"
	echo
}

print_test() {
	printf "${YELLOW}$1${NC}"
	echo
}

print_result() {
	case $1 in
		"ok") printf "${GREEN}OK!${NC}";;
		"ko") printf "${RED}KO!${NC}";;
	esac
	echo
}

run_test() {
	if cmp -s $expected_outfile $outfile 
	then
		print_result "ok"
	else
		print_result "ko"
		diff -y $expected_outfile $outfile
	fi
}

cleanup() {
	rm $expected_outfile $outfile
}

#test 1
print_title "test1"
print_test "test: < infile cat | wc -l > outfile"
< $infile cat | wc -w > $expected_outfile
$bin $infile "cat" "wc -w" $outfile
run_test

#test 2
print_title "test2"
print_test "test: < infile ls -la | cat -e > outfile"
< $infile ls -la | cat -e > $expected_outfile
$bin $infile "ls -la" "cat -e" $outfile
run_test 

#test 3
print_title "test3"
print_test "test: < infile cat | cat > outfile"
cleanup
< $infile cat | cat > $expected_outfile
$bin $infile "cat" "cat" $outfile
run_test

#test 4
print_title "test4"
print_test "test: < infile /usr/bin/cat | cat > outfile"
cleanup
< $infile /usr/bin/cat | cat > $expected_outfile
$bin $infile "/usr/bin/cat" "cat" $outfile
run_test

#test 5
print_title "test5"
print_test "test: < infile ls -l -a | cat -e -n > outfile"
cleanup
< $infile ls -l -a | cat -e -n > $expected_outfile
$bin $infile "ls -l -a" "cat -e -n" $outfile
run_test

#test 6
print_title "test6"
print_test "test: < infile ls -l -a -f | cat -e -n > outfile"
cleanup
< $infile ls -l -a -f | cat -e -n > $expected_outfile
$bin $infile "ls -l -a -f" "cat -e -n" $outfile
run_test

#test 7
print_title "test7"
print_test "test: < nonexisting ls -l -a -f | cat -e -n > outfile"
cleanup
$bin "nonexist" "ls -l -a -f" "cat -e -n" $outfile
echo "expected exit code: $?"
< "nonexist" ls -l -a -f | cat -e -n > $expected_outfile
echo "actual exit code: $?"
run_test

#test 8
print_title "test8"
print_test "test: < infile sleep 3 | cat -e -n > nopermission"
# cleanup
time $bin $infile "sleep 3" "cat -e -n" "outfiles/outfile_without_permissions"
echo "actual exit code: $?"
time < $infile sleep 3 | cat -e -n > "outfiles/outfile_without_permissions"
echo "expected exit code: $?"
run_test

#test 9
print_title "test9"
print_test "test: < infile badcommand | cat -e -n > nopermission"
# cleanup
$bin $infile "badcommand" "cat -e -n" "outfiles/outfile_without_permissions"
echo "actual exit code: $?"
< $infile badcommand | cat -e -n > "outfiles/outfile_without_permissions"
echo "expected exit code: $?"
run_test

#test 10
print_title "test10"
print_test "test: < infile cat -e -n | badcommand  > outfile"
# cleanup
$bin $infile "cat -e -n" "badcommand" $outfile
echo "actual exit code: $?"
< $infile cat -e -n | badcommand > $outfile
echo "expected exit code: $?"
run_test
